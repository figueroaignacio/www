// i18n
import { routing } from '@/i18n/routing';
import { hasLocale, Locale, NextIntlClientProvider } from 'next-intl';
import { setRequestLocale } from 'next-intl/server';

// Components
import { Footer } from '@/components/footer';
import { Header } from '@/components/header';
import { NavigationBar } from '@/components/navigation-bar';
import { ThemeProvider } from 'next-themes';
import NextTopLoader from 'nextjs-toploader';

// Utils
import { geistSans } from '@/lib/fonts';
import type { Metadata } from 'next';
import { notFound } from 'next/navigation';

type LocaleLayoutProps = {
  children: React.ReactNode;
  params: Promise<{ locale: Locale }>;
};

export function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

export const metadata: Metadata = {
  title: 'Ignacio Figueroa - Software Developer',
  description: 'Generated by create next app',
};

export default async function LocaleLayout({ children, params }: LocaleLayoutProps) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  setRequestLocale(locale);

  return (
    <html lang={locale} suppressHydrationWarning>
      <body className={`${geistSans.className} antialiased`}>
        <NextTopLoader color="#3b82f6" showSpinner />
        <ThemeProvider attribute="class" defaultTheme="dark">
          <NextIntlClientProvider>
            <div className="space-y-4">
              <Header />
              <NavigationBar />
              <main className="container">{children}</main>
              <Footer />
            </div>
          </NextIntlClientProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
